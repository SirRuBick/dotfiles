# Environment setup,
# all shells will run env first
#
#################################################################

# We need to set $ENV so that if you use shell X as your login shell,
# and then start "sh" as a non-login interactive shell the startup scripts will
# correctly run.
export ENV=~/interactive

# We also need to set BASH_ENV, which is run for *non-interactive* shells.
# (unlike $ENV, which is for interactive shells)
export BASH_ENV=~/.config/shell/bash/env

#################################################################

# environment functions

# Usage: prepend_path [PATH]
function prepend_path() {
    if [ -d $1 ]; then
        export PATH="$1:$PATH"
    fi
}

# Usage: append_path [PATH]
function append_path() {
    if [ -d $1 ]; then
        export PATH="$PATH:$1"
    fi
}

# Usage: indirect_expand PATH -> $PATH
indirect_expand () {
    env |sed -n "s/^$1=//p"
}

# Usage: pathremove /path/to/bin [PATH]
# Eg, to remove ~/bin from $PATH
#     pathremove ~/bin PATH
pathremove () {
    local IFS=':'
    local newpath
    local dir
    local var=${2:-PATH}
    # Bash has ${!var}, but this is not portable.
    for dir in `indirect_expand "$var"`; do
        IFS=''
        if [ "$dir" != "$1" ]; then
            newpath=$newpath:$dir
        fi
    done
    export $var=${newpath#:}
}

#################################################################

# TODO: Set necessary PATH
# set PATH
prepend_path "$HOME/.config/bin"

# set up the XDG Base Directory
export XDG_CONFIG_HOME=~/.config
export XDG_DATA_HOME=~/.local/share
export XDG_CACHE_HOME=~/.cache

# set up text editor
export EDITOR="nvim"
export VISUAL="nvim"

# OS specific environment
case "$(uname -s)" in

   Darwin)
     # MacOS
     ;;

   Linux)
     # Linux
     ;;

   CYGWIN*|MINGW32*|MSYS*)
     # Windows
     ;;

   *)
     # Other OS
     ;;
esac

# Local environment
if [ -f $XDG_CONFIG_HOME/shell/common/env.local ]; then
  source $XDG_CONFIG_HOME/shell/common/env.local
fi
